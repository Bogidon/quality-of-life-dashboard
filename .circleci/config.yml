version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.3.0
jobs:
  build:
    docker:
      - image: cimg/node:lts-browsers

    resource_class: large

    working_directory: ~/repo

    steps:
      - checkout
      - run: git clone https://github.com/DataWorks-NC/durham-quality-of-life-data.git data
#        TODO: Remove this step once fully upgraded
      - run:
          command: git checkout develop
          working_directory: data

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v4-dependencies-

      - run: npm install --production=false

      - save_cache:
          paths:
            - node_modules
          key: v4-dependencies-{{ checksum "package.json" }}

      - run:
          name: Run jest tests
          command: npm run test

      # run tests!
      - run: npm run build-data 2>&1 | tee npm-build-output-data.txt
      - store_artifacts:
          path: ~/repo/npm-build-output-data.txt

      # Copy env file based on environment
      - when:
          condition:
            equal: [ main, << pipeline.git.branch >> ]
          steps:
            - run: cp .circleci/.env.production ./.env.production

      - when:
          condition:
            equal: [ staging, << pipeline.git.branch >> ]
          steps:
            - run: cp .circleci/.env.staging ./.env.staging

      - when:
          condition:
            equal: [ develop, << pipeline.git.branch >> ]
          steps:
            - run: cp .circleci/.env.develop ./.env.develop

      - run: npm run build 2>&1 | tee npm-build-output.txt
      - store_artifacts:
          path: ~/repo/npm-build-output.txt
      - run: ~/repo/data/.circleci/check-build-output-for-errors.sh

      - run: mkdir /tmp/workspace
      - persist_to_workspace:
          root: .
          paths:
            - ./*
#
#  performance_test:
#    docker:
#      - image: cimg/node:lts-browsers
#
#    working_directory: /tmp/workspace/
#
#    steps:
#      - attach_workspace:
#          at: /tmp/workspace
#
#      - browser-tools/install-chrome
#      - browser-tools/install-chromedriver      # Performance test
#      - run: npm install --location=global @lhci/cli
#      - run: |
#          if [ "$CIRCLECI_BRANCH" = "main" ]; then
#            lhci autorun --uploadUrlMap
#          else
#            lhci autorun
#          fi

  sitemap:
    docker:
      - image: cimg/node:lts-browsers

    working_directory: /tmp/workspace/

    steps:
      - attach_workspace:
          at: /tmp/workspace

      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v4-dependencies-

      # Generate a sitemap based on what's currently on dev site.
      - run: npm run build-sitemap-dev

      - persist_to_workspace:
          root: .
          paths:
            - ./*

  deploy_prod: &DEPLOY_PROD
    docker:
      - image: mcr.microsoft.com/azure-cli
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          command: pip install -r .circleci/requirements.txt
          working_directory: /tmp/workspace/

      # Add robots file for production.
      - run: cp /tmp/workspace/.circleci/robots-prod.txt /tmp/workspace/dist/robots.txt

      # Tweak sitemap URLs
      - run: sed -i 's/nbhdcompassdev\.azurewebsites\.us/compass\.durhamnc\.gov/g' /tmp/workspace/dist/sitemap.xml

      # Push code to Azure blob storage
      - run:
          command: python .circleci/deploy.py /tmp/workspace/dist
          working_directory: /tmp/workspace/
          environment:
            AZURE_DESTINATION_BLOB: "prod"

  deploy_dev:
    docker:
      - image: mcr.microsoft.com/azure-cli
    steps:
      - attach_workspace:
          at: /tmp/workspace

      - run:
          command: pip install -r .circleci/requirements.txt
          working_directory: /tmp/workspace/
      - run:
          command: python .circleci/deploy.py /tmp/workspace/dist
          working_directory: /tmp/workspace/
          environment:
            AZURE_DESTINATION_BLOB: "dev"

  deploy_stage:
    docker:
      - image: mcr.microsoft.com/azure-cli
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          command: pip install -r .circleci/requirements.txt
          working_directory: /tmp/workspace/
      - run:
          command: python .circleci/deploy.py /tmp/workspace/dist
          working_directory: /tmp/workspace/
          environment:
            AZURE_DESTINATION_BLOB: "stage"

workflows:
  version: 2.1
  build_and_deploy:
    jobs:
      - build
#      - performance_test:
#          requires:
#            - build
      - sitemap:
          requires:
            - build
          filters:
            branches:
              only:
                main
      - deploy_stage:
          requires:
            - build
          filters:
            branches:
              only:
                staging
      - deploy_dev:
          requires:
            - build
          filters:
            branches:
              only:
                develop

      - deploy_prod:
          requires:
            - sitemap
          filters:
            branches:
              only:
                main
